# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# 
#     Sorbonne University
#     Washington University in Saint Louis
#     University of Texas at Austin
# 

# 
# Compilation of Programs Tinker-HP's programs
# 

#
# Declare all the programs
#


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = analyze$(EXEEXT) bar$(EXEEXT) dynamic$(EXEEXT) \
	minimize$(EXEEXT) pimd$(EXEEXT) testgrad$(EXEEXT)
subdir = source
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libtinkercalc_a_AR = $(AR) $(ARFLAGS)
libtinkercalc_a_LIBADD =
am_libtinkercalc_a_OBJECTS = active.$(OBJEXT) alterchg.$(OBJEXT) \
	analysis.$(OBJEXT) angles.$(OBJEXT) attach.$(OBJEXT) \
	baoab.$(OBJEXT) baoabrespa.$(OBJEXT) baoabrespa1.$(OBJEXT) \
	baoabpi.$(OBJEXT) baoabrespapi.$(OBJEXT) basefile.$(OBJEXT) \
	bbk.$(OBJEXT) beeman.$(OBJEXT) bicubic.$(OBJEXT) \
	bitors.$(OBJEXT) bonds.$(OBJEXT) bounds.$(OBJEXT) \
	boundspi.$(OBJEXT) calendar.$(OBJEXT) chkpole.$(OBJEXT) \
	chkring.$(OBJEXT) chkxyz.$(OBJEXT) cholesky.$(OBJEXT) \
	cluster.$(OBJEXT) command.$(OBJEXT) control.$(OBJEXT) \
	cspline.$(OBJEXT) cutoffs.$(OBJEXT) damping.$(OBJEXT) \
	dcdio.$(OBJEXT) dcinduce_pme.$(OBJEXT) dcinduce_pme2.$(OBJEXT) \
	dcinduce_shortreal.$(OBJEXT) dcflux.$(OBJEXT) diis.$(OBJEXT) \
	domdecstuff.$(OBJEXT) eangang.$(OBJEXT) eangang1.$(OBJEXT) \
	eangang3.$(OBJEXT) eangle.$(OBJEXT) eangle1.$(OBJEXT) \
	eangle3.$(OBJEXT) eangtor.$(OBJEXT) eangtor1.$(OBJEXT) \
	eangtor3.$(OBJEXT) ebond.$(OBJEXT) ebond1.$(OBJEXT) \
	ebond3.$(OBJEXT) echarge.$(OBJEXT) echarge1.$(OBJEXT) \
	echarge3.$(OBJEXT) echgtrn.$(OBJEXT) echgtrn1.$(OBJEXT) \
	echgtrn3.$(OBJEXT) edisp.$(OBJEXT) edisp1.$(OBJEXT) \
	edisp3.$(OBJEXT) egeom.$(OBJEXT) egeom1.$(OBJEXT) \
	egeom3.$(OBJEXT) ehal.$(OBJEXT) ehal1.$(OBJEXT) \
	ehal3.$(OBJEXT) eimprop.$(OBJEXT) eimprop1.$(OBJEXT) \
	eimprop3.$(OBJEXT) eimptor.$(OBJEXT) eimptor1.$(OBJEXT) \
	eimptor3.$(OBJEXT) elj.$(OBJEXT) elj1.$(OBJEXT) elj3.$(OBJEXT) \
	empole.$(OBJEXT) empole0.$(OBJEXT) empole1.$(OBJEXT) \
	empole3.$(OBJEXT) energy.$(OBJEXT) eopbend.$(OBJEXT) \
	eopbend1.$(OBJEXT) eopbend3.$(OBJEXT) eopdist.$(OBJEXT) \
	eopdist1.$(OBJEXT) eopdist3.$(OBJEXT) epitors.$(OBJEXT) \
	epitors1.$(OBJEXT) epitors3.$(OBJEXT) epolar.$(OBJEXT) \
	epolar1.$(OBJEXT) epolar1_group.$(OBJEXT) epolar1tcg.$(OBJEXT) \
	epolar1tcg1shortreal.$(OBJEXT) epolar1tcg2.$(OBJEXT) \
	epolar1tcg2_2.$(OBJEXT) epolar1tcg2shortreal.$(OBJEXT) \
	epolar1tcg_2.$(OBJEXT) epolar3.$(OBJEXT) \
	epolar3_group.$(OBJEXT) epolar3tcg.$(OBJEXT) \
	epolar3tcg_2.$(OBJEXT) erepel.$(OBJEXT) erepel1.$(OBJEXT) \
	erepel3.$(OBJEXT) erf.$(OBJEXT) esmd1.$(OBJEXT) \
	estrbnd.$(OBJEXT) estrbnd1.$(OBJEXT) estrbnd3.$(OBJEXT) \
	estrtor.$(OBJEXT) estrtor1.$(OBJEXT) estrtor3.$(OBJEXT) \
	etors.$(OBJEXT) etors1.$(OBJEXT) etors3.$(OBJEXT) \
	etortor.$(OBJEXT) etortor1.$(OBJEXT) etortor3.$(OBJEXT) \
	eurey.$(OBJEXT) eurey1.$(OBJEXT) eurey3.$(OBJEXT) \
	evcorr.$(OBJEXT) extra.$(OBJEXT) extra1.$(OBJEXT) \
	extra3.$(OBJEXT) fatal.$(OBJEXT) fft_mpi.$(OBJEXT) \
	field.$(OBJEXT) final.$(OBJEXT) freeunit.$(OBJEXT) \
	geometry.$(OBJEXT) getkey.$(OBJEXT) getnumb.$(OBJEXT) \
	getprm.$(OBJEXT) getstring.$(OBJEXT) gettext.$(OBJEXT) \
	getword.$(OBJEXT) getxyz.$(OBJEXT) gradient.$(OBJEXT) \
	groups.$(OBJEXT) image.$(OBJEXT) initatom.$(OBJEXT) \
	initial.$(OBJEXT) initprm.$(OBJEXT) initres.$(OBJEXT) \
	invert.$(OBJEXT) kangang.$(OBJEXT) kangle.$(OBJEXT) \
	kangtor.$(OBJEXT) katom.$(OBJEXT) kbond.$(OBJEXT) \
	kcharge.$(OBJEXT) kchgflx.$(OBJEXT) kchgtrn.$(OBJEXT) \
	kdisp.$(OBJEXT) kewald.$(OBJEXT) kgeom.$(OBJEXT) \
	kimprop.$(OBJEXT) kimptor.$(OBJEXT) kinetic.$(OBJEXT) \
	kmpole.$(OBJEXT) kopbend.$(OBJEXT) kopdist.$(OBJEXT) \
	kpitors.$(OBJEXT) kpolar.$(OBJEXT) krepel.$(OBJEXT) \
	ksmd.$(OBJEXT) kstrbnd.$(OBJEXT) kstrtor.$(OBJEXT) \
	ktors.$(OBJEXT) ktortor.$(OBJEXT) kurey.$(OBJEXT) \
	kvdw.$(OBJEXT) lattice.$(OBJEXT) lbfgs.$(OBJEXT) \
	linalg.$(OBJEXT) maxwell.$(OBJEXT) mdinit.$(OBJEXT) \
	mdinitbead.$(OBJEXT) mdinitreps.$(OBJEXT) mdrest.$(OBJEXT) \
	mdsave.$(OBJEXT) mdsavebeads.$(OBJEXT) mdstat.$(OBJEXT) \
	mdstatpi.$(OBJEXT) mechanic.$(OBJEXT) molecule.$(OBJEXT) \
	mpistuff.$(OBJEXT) mutate.$(OBJEXT) nblist.$(OBJEXT) \
	newinduce_group.$(OBJEXT) newinduce_pme.$(OBJEXT) \
	newinduce_pme2.$(OBJEXT) newinduce_shortreal.$(OBJEXT) \
	nextarg.$(OBJEXT) nexttext.$(OBJEXT) nspline.$(OBJEXT) \
	number.$(OBJEXT) numeral.$(OBJEXT) openend.$(OBJEXT) \
	optsave.$(OBJEXT) pmestuff.$(OBJEXT) precise.$(OBJEXT) \
	pressure.$(OBJEXT) prime.$(OBJEXT) prmkey.$(OBJEXT) \
	promo.$(OBJEXT) promosmd.$(OBJEXT) prtdyn.$(OBJEXT) \
	prtdynbeads.$(OBJEXT) prtxyz.$(OBJEXT) random.$(OBJEXT) \
	rattle.$(OBJEXT) readdyn.$(OBJEXT) readprm.$(OBJEXT) \
	readxyz.$(OBJEXT) respa.$(OBJEXT) respa1.$(OBJEXT) \
	rings.$(OBJEXT) rotpole.$(OBJEXT) scalders.$(OBJEXT) \
	search.$(OBJEXT) shakeup.$(OBJEXT) sort.$(OBJEXT) \
	suffix.$(OBJEXT) switch.$(OBJEXT) switch_group.$(OBJEXT) \
	tcgstuff.$(OBJEXT) temper.$(OBJEXT) torphase.$(OBJEXT) \
	torque.$(OBJEXT) torsions.$(OBJEXT) trimtext.$(OBJEXT) \
	unitcell.$(OBJEXT) verlet.$(OBJEXT) version.$(OBJEXT)
libtinkercalc_a_OBJECTS = $(am_libtinkercalc_a_OBJECTS)
libtinkerclv_a_AR = $(AR) $(ARFLAGS)
libtinkerclv_a_LIBADD =
am_libtinkerclv_a_OBJECTS =  \
	libtinkerclv_a-colvarproxy_tinkerhp.$(OBJEXT)
libtinkerclv_a_OBJECTS = $(am_libtinkerclv_a_OBJECTS)
libtinkermod_a_AR = $(AR) $(ARFLAGS)
libtinkermod_a_LIBADD =
am_libtinkermod_a_OBJECTS = MOD_sizes.$(OBJEXT) MOD_action.$(OBJEXT) \
	MOD_analyz.$(OBJEXT) MOD_angang.$(OBJEXT) MOD_angle.$(OBJEXT) \
	MOD_angpot.$(OBJEXT) MOD_angtor.$(OBJEXT) MOD_argue.$(OBJEXT) \
	MOD_ascii.$(OBJEXT) MOD_atmlst.$(OBJEXT) MOD_atmtyp.$(OBJEXT) \
	MOD_atoms.$(OBJEXT) MOD_bath.$(OBJEXT) MOD_beads.$(OBJEXT) \
	MOD_bitor.$(OBJEXT) MOD_bndpot.$(OBJEXT) MOD_bond.$(OBJEXT) \
	MOD_bound.$(OBJEXT) MOD_boxes.$(OBJEXT) MOD_cavity.$(OBJEXT) \
	MOD_cell.$(OBJEXT) MOD_colvars.$(OBJEXT) MOD_cflux.$(OBJEXT) \
	MOD_charge.$(OBJEXT) MOD_chgpen.$(OBJEXT) MOD_chgpot.$(OBJEXT) \
	MOD_chgtrn.$(OBJEXT) MOD_chunks.$(OBJEXT) MOD_couple.$(OBJEXT) \
	MOD_ctrpot.$(OBJEXT) MOD_cutoff.$(OBJEXT) MOD_dcdmod.$(OBJEXT) \
	MOD_deconvolution.$(OBJEXT) MOD_deriv.$(OBJEXT) \
	MOD_divcon.$(OBJEXT) MOD_disp.$(OBJEXT) MOD_domdec.$(OBJEXT) \
	MOD_dsppot.$(OBJEXT) MOD_energi.$(OBJEXT) MOD_ewald.$(OBJEXT) \
	MOD_fft.$(OBJEXT) MOD_fields.$(OBJEXT) MOD_files.$(OBJEXT) \
	MOD_freeze.$(OBJEXT) MOD_group.$(OBJEXT) MOD_improp.$(OBJEXT) \
	MOD_imptor.$(OBJEXT) MOD_inform.$(OBJEXT) MOD_inter.$(OBJEXT) \
	MOD_iounit.$(OBJEXT) MOD_kanang.$(OBJEXT) MOD_kangs.$(OBJEXT) \
	MOD_kantor.$(OBJEXT) MOD_katoms.$(OBJEXT) MOD_kbonds.$(OBJEXT) \
	MOD_kcflux.$(OBJEXT) MOD_kchrge.$(OBJEXT) MOD_kcpen.$(OBJEXT) \
	MOD_kctrn.$(OBJEXT) MOD_kdsp.$(OBJEXT) MOD_keys.$(OBJEXT) \
	MOD_kgeoms.$(OBJEXT) MOD_khbond.$(OBJEXT) MOD_kiprop.$(OBJEXT) \
	MOD_kitors.$(OBJEXT) MOD_kmulti.$(OBJEXT) MOD_kopbnd.$(OBJEXT) \
	MOD_kopdst.$(OBJEXT) MOD_kpitor.$(OBJEXT) MOD_kpolpr.$(OBJEXT) \
	MOD_kpolr.$(OBJEXT) MOD_krepl.$(OBJEXT) MOD_kstbnd.$(OBJEXT) \
	MOD_ksttor.$(OBJEXT) MOD_ktorsn.$(OBJEXT) MOD_ktrtor.$(OBJEXT) \
	MOD_kurybr.$(OBJEXT) MOD_kvdwpr.$(OBJEXT) MOD_kvdws.$(OBJEXT) \
	MOD_langevin.$(OBJEXT) MOD_linmin.$(OBJEXT) MOD_math.$(OBJEXT) \
	MOD_mdstuf.$(OBJEXT) MOD_mdstuf1.$(OBJEXT) MOD_merck.$(OBJEXT) \
	MOD_minima.$(OBJEXT) MOD_molcul.$(OBJEXT) MOD_moldyn.$(OBJEXT) \
	MOD_commstuffpi.$(OBJEXT) MOD_mplpot.$(OBJEXT) \
	MOD_mpole.$(OBJEXT) MOD_msmd.$(OBJEXT) MOD_mutant.$(OBJEXT) \
	MOD_neigh.$(OBJEXT) MOD_opbend.$(OBJEXT) MOD_opdist.$(OBJEXT) \
	MOD_output.$(OBJEXT) MOD_params.$(OBJEXT) MOD_pitors.$(OBJEXT) \
	MOD_plumed.$(OBJEXT) MOD_pme.$(OBJEXT) MOD_polar.$(OBJEXT) \
	MOD_polgrp.$(OBJEXT) MOD_polpot.$(OBJEXT) MOD_potent.$(OBJEXT) \
	MOD_precis.$(OBJEXT) MOD_ptable.$(OBJEXT) MOD_qtb.$(OBJEXT) \
	MOD_repel.$(OBJEXT) MOD_replicas.$(OBJEXT) \
	MOD_reppot.$(OBJEXT) MOD_resdue.$(OBJEXT) MOD_ring.$(OBJEXT) \
	MOD_scales.$(OBJEXT) MOD_shunt.$(OBJEXT) MOD_spectra.$(OBJEXT) \
	MOD_strbnd.$(OBJEXT) MOD_strtor.$(OBJEXT) \
	MOD_timestat.$(OBJEXT) MOD_titles.$(OBJEXT) \
	MOD_torpot.$(OBJEXT) MOD_tors.$(OBJEXT) MOD_tortor.$(OBJEXT) \
	MOD_units.$(OBJEXT) MOD_uprior.$(OBJEXT) MOD_urey.$(OBJEXT) \
	MOD_urypot.$(OBJEXT) MOD_usage.$(OBJEXT) \
	MOD_utilbaoab.$(OBJEXT) MOD_utilbaoabpi.$(OBJEXT) \
	MOD_vdw.$(OBJEXT) MOD_vdwpot.$(OBJEXT) MOD_virial.$(OBJEXT)
libtinkermod_a_OBJECTS = $(am_libtinkermod_a_OBJECTS)
am_analyze_OBJECTS = analyze.$(OBJEXT)
analyze_OBJECTS = $(am_analyze_OBJECTS)
analyze_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am_bar_OBJECTS = bar.$(OBJEXT)
bar_OBJECTS = $(am_bar_OBJECTS)
bar_LDADD = $(LDADD)
am_dynamic_OBJECTS = dynamic.$(OBJEXT)
dynamic_OBJECTS = $(am_dynamic_OBJECTS)
dynamic_LDADD = $(LDADD)
am_minimize_OBJECTS = minimize.$(OBJEXT)
minimize_OBJECTS = $(am_minimize_OBJECTS)
minimize_LDADD = $(LDADD)
am_pimd_OBJECTS = pimd.$(OBJEXT)
pimd_OBJECTS = $(am_pimd_OBJECTS)
pimd_LDADD = $(LDADD)
am_testgrad_OBJECTS = testgrad.$(OBJEXT)
testgrad_OBJECTS = $(am_testgrad_OBJECTS)
testgrad_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_@AM_V@)
am__v_FC_ = $(am__v_FC_@AM_DEFAULT_V@)
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libtinkercalc_a_SOURCES) $(libtinkerclv_a_SOURCES) \
	$(libtinkermod_a_SOURCES) $(analyze_SOURCES) $(bar_SOURCES) \
	$(dynamic_SOURCES) $(minimize_SOURCES) $(pimd_SOURCES) \
	$(testgrad_SOURCES)
DIST_SOURCES = $(libtinkercalc_a_SOURCES) $(libtinkerclv_a_SOURCES) \
	$(libtinkermod_a_SOURCES) $(analyze_SOURCES) $(bar_SOURCES) \
	$(dynamic_SOURCES) $(minimize_SOURCES) $(pimd_SOURCES) \
	$(testgrad_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS = @BLAS@
COLVARSDEP = @COLVARSDEP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_F = @FCFLAGS_F@
FC_DEFINE = @FC_DEFINE@
FFLAGS = @FFLAGS@
FFTW_INCLUDES = @FFTW_INCLUDES@
FFTW_INCLUDES_PATH = @FFTW_INCLUDES_PATH@
FFTW_LIBS = @FFTW_LIBS@
FFTW_LIB_PATH = @FFTW_LIB_PATH@
FFTW_MKL_INCLUDES_PATH = @FFTW_MKL_INCLUDES_PATH@
FFTW_TYPE = @FFTW_TYPE@
INCLUDE_COLVARS_MK = @INCLUDE_COLVARS_MK@
INCLUDE_DEPEND_MK = @INCLUDE_DEPEND_MK@
INCLUDE_PLUMED_MK = @INCLUDE_PLUMED_MK@
INCLUDE_TCL_MK = @INCLUDE_TCL_MK@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIB2DECOMP_INC = @LIB2DECOMP_INC@
LIB2DECOMP_LIB = @LIB2DECOMP_LIB@
LIBCOLVARS_INC = @LIBCOLVARS_INC@
LIBCOLVARS_LIB = @LIBCOLVARS_LIB@
LIBOBJS = @LIBOBJS@
LIBPLUMED_INC = @LIBPLUMED_INC@
LIBPLUMED_LIB = @LIBPLUMED_LIB@
LIBPLUMED_LIBPATH = @LIBPLUMED_LIBPATH@
LIBS = @LIBS@
LIBTCL_EXELIBPATH = @LIBTCL_EXELIBPATH@
LIBTCL_INC = @LIBTCL_INC@
LIBTCL_LIB = @LIBTCL_LIB@
LIBTCL_LIBPATH = @LIBTCL_LIBPATH@
LIBTINKERCLV = @LIBTINKERCLV@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKL_MOD_BIN = @MKL_MOD_BIN@
MKL_MOD_SOURCE = @MKL_MOD_SOURCE@
NVMPICXX = @NVMPICXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PLUMED = @PLUMED@
PLUMEDDEP = @PLUMEDDEP@
PREFIX = @PREFIX@
PYTHON = @PYTHON@
RANLIB = @RANLIB@
REALFC = @REALFC@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TCL = @TCL@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
tput = @tput@

#############################################
#
# Add your New main Here
#
# bin_PROGRAMMS +=  yourmain
#
#############################################

#
# Declare their sources and the dependencies
#
analyze_SOURCES = analyze.f
analyze_DEPENDENCIES = libtinkermod.a libtinkercalc.a libtinkerclv.a @COLVARSDEP@ @PLUMEDDEP@
bar_SOURCES = bar.f
bar_DEPENDENCIES = libtinkermod.a libtinkercalc.a libtinkerclv.a @COLVARSDEP@ @PLUMEDDEP@
dynamic_SOURCES = dynamic.f
dynamic_DEPENDENCIES = libtinkermod.a libtinkercalc.a libtinkerclv.a @COLVARSDEP@ @PLUMEDDEP@
minimize_SOURCES = minimize.f
minimize_DEPENDENCIES = libtinkermod.a libtinkercalc.a libtinkerclv.a @COLVARSDEP@ @PLUMEDDEP@
pimd_SOURCES = pimd.f
pimd_DEPENDENCIES = libtinkermod.a libtinkercalc.a libtinkerclv.a @COLVARSDEP@ @PLUMEDDEP@
testgrad_SOURCES = testgrad.f
testgrad_DEPENDENCIES = libtinkermod.a libtinkercalc.a libtinkerclv.a @COLVARSDEP@ @PLUMEDDEP@

#############################################
#
# Add the sources of your new main Here
#
# yourmain_SOURCES      = yourmain.f
# yourmain_DEPENDENCIES = libtinkermod.a libtinkercalc.a
#
#############################################

#
# Declare the libraries they need
# 

#
# These libraries come from tinker 
#

#
# These libraries are external and defined by configure
#
LDADD = libtinkercalc.a libtinkermod.a libtinkerclv.a \
	$(LIBCOLVARS_LIB) $(LIBTCL_LIB) $(LIBPLUMED_LIB) \
	$(LIB2DECOMP_LIB) $(FFTW_LIBS) $(BLAS) @NVMPICXX@

#
# Declare the Tinker libraries needed by the programs
#
# libtinkermod.a contains all the modules
# libtinkercal.a contains all the calculation routines
#
noinst_LIBRARIES = libtinkermod.a libtinkercalc.a libtinkerclv.a

#
# states that libtinkercal.a depends upon libtinkermod.a
#
#
libtinkercalc_a_DEPENDENCIES = libtinkermod.a libtinkerclv.a

#
# Declare that depend.mk and plumedlibs should be generated before everything else
#
BUILT_SOURCES = depend.mk plumed colvars tcl

#
# Declare the sources for the modules. They are compiled in the order determined by depend.mk
#
libtinkermod_a_SOURCES = MOD_sizes.f MOD_action.f MOD_analyz.f \
	MOD_angang.f MOD_angle.f MOD_angpot.f MOD_angtor.f MOD_argue.f \
	MOD_ascii.f MOD_atmlst.f MOD_atmtyp.f MOD_atoms.f MOD_bath.f \
	MOD_beads.f MOD_bitor.f MOD_bndpot.f MOD_bond.f MOD_bound.f \
	MOD_boxes.f MOD_cavity.f MOD_cell.f MOD_colvars.f MOD_cflux.f \
	MOD_charge.f MOD_chgpen.f MOD_chgpot.f MOD_chgtrn.f \
	MOD_chunks.f MOD_couple.f MOD_ctrpot.f MOD_cutoff.f \
	MOD_dcdmod.f MOD_deconvolution.f90 MOD_deriv.f MOD_divcon.f \
	MOD_disp.f MOD_domdec.f MOD_dsppot.f MOD_energi.f MOD_ewald.f \
	MOD_fft.f MOD_fields.f MOD_files.f MOD_freeze.f MOD_group.f \
	MOD_improp.f MOD_imptor.f MOD_inform.f MOD_inter.f \
	MOD_iounit.f MOD_kanang.f MOD_kangs.f MOD_kantor.f \
	MOD_katoms.f MOD_kbonds.f MOD_kcflux.f MOD_kchrge.f \
	MOD_kcpen.f MOD_kctrn.f MOD_kdsp.f MOD_keys.f MOD_kgeoms.f \
	MOD_khbond.f MOD_kiprop.f MOD_kitors.f MOD_kmulti.f \
	MOD_kopbnd.f MOD_kopdst.f MOD_kpitor.f MOD_kpolpr.f \
	MOD_kpolr.f MOD_krepl.f MOD_kstbnd.f MOD_ksttor.f MOD_ktorsn.f \
	MOD_ktrtor.f MOD_kurybr.f MOD_kvdwpr.f MOD_kvdws.f \
	MOD_langevin.f MOD_linmin.f MOD_math.f MOD_mdstuf.f \
	MOD_mdstuf1.f MOD_merck.f MOD_minima.f MOD_molcul.f \
	MOD_moldyn.f MOD_commstuffpi.f MOD_mplpot.f MOD_mpole.f \
	MOD_msmd.f MOD_mutant.f MOD_neigh.f MOD_opbend.f MOD_opdist.f \
	MOD_output.f MOD_params.f MOD_pitors.f MOD_plumed.f MOD_pme.f \
	MOD_polar.f MOD_polgrp.f MOD_polpot.f MOD_potent.f \
	MOD_precis.f MOD_ptable.f MOD_qtb.f MOD_repel.f MOD_replicas.f \
	MOD_reppot.f MOD_resdue.f MOD_ring.f MOD_scales.f MOD_shunt.f \
	MOD_spectra.f MOD_strbnd.f MOD_strtor.f MOD_timestat.f \
	MOD_titles.f MOD_torpot.f MOD_tors.f MOD_tortor.f MOD_units.f \
	MOD_uprior.f MOD_urey.f MOD_urypot.f MOD_usage.f \
	MOD_utilbaoab.f MOD_utilbaoabpi.f MOD_vdw.f MOD_vdwpot.f \
	MOD_virial.f

#
# Declare the sources for the colvar interface routines
#
libtinkerclv_a_SOURCES = colvarproxy_tinkerhp.cpp \
	colvarproxy_tinkerhp.h colvarproxy_tinkerhp_interface.h
libtinkerclv_a_CXXFLAGS = @LIBCOLVARS_INC@ @LIBTCL_INC@

#############################################
#
# Add your new routines here
#
# libtinkermod_a_SOURCES += MOD_xxxx.f
#
#############################################

#
# Declare the sources for the calculation routines
#
libtinkercalc_a_SOURCES = active.f alterchg.f analysis.f angles.f \
	attach.f baoab.f baoabrespa.f baoabrespa1.f baoabpi.f \
	baoabrespapi.f basefile.f bbk.f beeman.f bicubic.f bitors.f \
	bonds.f bounds.f boundspi.f calendar.f chkpole.f chkring.f \
	chkxyz.f cholesky.f cluster.f command.f control.f cspline.f \
	cutoffs.f damping.f dcdio.f dcinduce_pme.f dcinduce_pme2.f \
	dcinduce_shortreal.f dcflux.f diis.f domdecstuff.f eangang.f \
	eangang1.f eangang3.f eangle.f eangle1.f eangle3.f eangtor.f \
	eangtor1.f eangtor3.f ebond.f ebond1.f ebond3.f echarge.f \
	echarge1.f echarge3.f echgtrn.f echgtrn1.f echgtrn3.f edisp.f \
	edisp1.f edisp3.f egeom.f egeom1.f egeom3.f ehal.f ehal1.f \
	ehal3.f eimprop.f eimprop1.f eimprop3.f eimptor.f eimptor1.f \
	eimptor3.f elj.f elj1.f elj3.f empole.f empole0.f empole1.f \
	empole3.f energy.f eopbend.f eopbend1.f eopbend3.f eopdist.f \
	eopdist1.f eopdist3.f epitors.f epitors1.f epitors3.f epolar.f \
	epolar1.f epolar1_group.f epolar1tcg.f epolar1tcg1shortreal.f \
	epolar1tcg2.f epolar1tcg2_2.f epolar1tcg2shortreal.f \
	epolar1tcg_2.f epolar3.f epolar3_group.f epolar3tcg.f \
	epolar3tcg_2.f erepel.f erepel1.f erepel3.f erf.f esmd1.f \
	estrbnd.f estrbnd1.f estrbnd3.f estrtor.f estrtor1.f \
	estrtor3.f etors.f etors1.f etors3.f etortor.f etortor1.f \
	etortor3.f eurey.f eurey1.f eurey3.f evcorr.f extra.f extra1.f \
	extra3.f fatal.f fft_mpi.f90 field.f final.f freeunit.f \
	geometry.f getkey.f getnumb.f getprm.f getstring.f gettext.f \
	getword.f getxyz.f gradient.f groups.f image.f initatom.f \
	initial.f initprm.f initres.f invert.f kangang.f kangle.f \
	kangtor.f katom.f kbond.f kcharge.f kchgflx.f kchgtrn.f \
	kdisp.f kewald.f kgeom.f kimprop.f kimptor.f kinetic.f \
	kmpole.f kopbend.f kopdist.f kpitors.f kpolar.f krepel.f \
	ksmd.f kstrbnd.f kstrtor.f ktors.f ktortor.f kurey.f kvdw.f \
	lattice.f lbfgs.f linalg.f maxwell.f mdinit.f mdinitbead.f \
	mdinitreps.f mdrest.f mdsave.f mdsavebeads.f mdstat.f \
	mdstatpi.f mechanic.f molecule.f mpistuff.f mutate.f nblist.f \
	newinduce_group.f newinduce_pme.f newinduce_pme2.f \
	newinduce_shortreal.f nextarg.f nexttext.f nspline.f number.f \
	numeral.f openend.f optsave.f pmestuff.f precise.f pressure.f \
	prime.f prmkey.f promo.f promosmd.f prtdyn.f prtdynbeads.f \
	prtxyz.f random.f rattle.f readdyn.f readprm.f readxyz.f \
	respa.f respa1.f rings.f rotpole.f scalders.f search.f \
	shakeup.f sort.f suffix.f switch.f switch_group.f tcgstuff.f \
	temper.f torphase.f torque.f torsions.f trimtext.f unitcell.f \
	verlet.f version.f

#############################################
#
# Add your new routines here
#
# libtinkercalc_a_SOURCES += yourexplicitname.f
#
#############################################

#
#FLAGS to use for the compilation of all sources
#

#
# LIB2DECOMP_INC is only used when compiling fft_mpi.f90
# So, this include flag is used only for *.f90 sources
# For *.f sources, that would have been AM_FFLAGS
#
AM_FCFLAGS = $(LIB2DECOMP_INC) $(PLUMEDFLAG) $(LIBPLUMED_INC) $(LIBCOLVARS_INC) $(TCLFLAG) $(LIBTCL_INC)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .f90 .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu source/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu source/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libtinkercalc.a: $(libtinkercalc_a_OBJECTS) $(libtinkercalc_a_DEPENDENCIES) $(EXTRA_libtinkercalc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtinkercalc.a
	$(AM_V_AR)$(libtinkercalc_a_AR) libtinkercalc.a $(libtinkercalc_a_OBJECTS) $(libtinkercalc_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtinkercalc.a

libtinkerclv.a: $(libtinkerclv_a_OBJECTS) $(libtinkerclv_a_DEPENDENCIES) $(EXTRA_libtinkerclv_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtinkerclv.a
	$(AM_V_AR)$(libtinkerclv_a_AR) libtinkerclv.a $(libtinkerclv_a_OBJECTS) $(libtinkerclv_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtinkerclv.a

libtinkermod.a: $(libtinkermod_a_OBJECTS) $(libtinkermod_a_DEPENDENCIES) $(EXTRA_libtinkermod_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtinkermod.a
	$(AM_V_AR)$(libtinkermod_a_AR) libtinkermod.a $(libtinkermod_a_OBJECTS) $(libtinkermod_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtinkermod.a

analyze$(EXEEXT): $(analyze_OBJECTS) $(analyze_DEPENDENCIES) $(EXTRA_analyze_DEPENDENCIES) 
	@rm -f analyze$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(analyze_OBJECTS) $(analyze_LDADD) $(LIBS)

bar$(EXEEXT): $(bar_OBJECTS) $(bar_DEPENDENCIES) $(EXTRA_bar_DEPENDENCIES) 
	@rm -f bar$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(bar_OBJECTS) $(bar_LDADD) $(LIBS)

dynamic$(EXEEXT): $(dynamic_OBJECTS) $(dynamic_DEPENDENCIES) $(EXTRA_dynamic_DEPENDENCIES) 
	@rm -f dynamic$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(dynamic_OBJECTS) $(dynamic_LDADD) $(LIBS)

minimize$(EXEEXT): $(minimize_OBJECTS) $(minimize_DEPENDENCIES) $(EXTRA_minimize_DEPENDENCIES) 
	@rm -f minimize$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(minimize_OBJECTS) $(minimize_LDADD) $(LIBS)

pimd$(EXEEXT): $(pimd_OBJECTS) $(pimd_DEPENDENCIES) $(EXTRA_pimd_DEPENDENCIES) 
	@rm -f pimd$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(pimd_OBJECTS) $(pimd_LDADD) $(LIBS)

testgrad$(EXEEXT): $(testgrad_OBJECTS) $(testgrad_DEPENDENCIES) $(EXTRA_testgrad_DEPENDENCIES) 
	@rm -f testgrad$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(testgrad_OBJECTS) $(testgrad_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libtinkerclv_a-colvarproxy_tinkerhp.o: colvarproxy_tinkerhp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtinkerclv_a_CXXFLAGS) $(CXXFLAGS) -MT libtinkerclv_a-colvarproxy_tinkerhp.o -MD -MP -MF $(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Tpo -c -o libtinkerclv_a-colvarproxy_tinkerhp.o `test -f 'colvarproxy_tinkerhp.cpp' || echo '$(srcdir)/'`colvarproxy_tinkerhp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Tpo $(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='colvarproxy_tinkerhp.cpp' object='libtinkerclv_a-colvarproxy_tinkerhp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtinkerclv_a_CXXFLAGS) $(CXXFLAGS) -c -o libtinkerclv_a-colvarproxy_tinkerhp.o `test -f 'colvarproxy_tinkerhp.cpp' || echo '$(srcdir)/'`colvarproxy_tinkerhp.cpp

libtinkerclv_a-colvarproxy_tinkerhp.obj: colvarproxy_tinkerhp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtinkerclv_a_CXXFLAGS) $(CXXFLAGS) -MT libtinkerclv_a-colvarproxy_tinkerhp.obj -MD -MP -MF $(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Tpo -c -o libtinkerclv_a-colvarproxy_tinkerhp.obj `if test -f 'colvarproxy_tinkerhp.cpp'; then $(CYGPATH_W) 'colvarproxy_tinkerhp.cpp'; else $(CYGPATH_W) '$(srcdir)/colvarproxy_tinkerhp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Tpo $(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='colvarproxy_tinkerhp.cpp' object='libtinkerclv_a-colvarproxy_tinkerhp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtinkerclv_a_CXXFLAGS) $(CXXFLAGS) -c -o libtinkerclv_a-colvarproxy_tinkerhp.obj `if test -f 'colvarproxy_tinkerhp.cpp'; then $(CYGPATH_W) 'colvarproxy_tinkerhp.cpp'; else $(CYGPATH_W) '$(srcdir)/colvarproxy_tinkerhp.cpp'; fi`

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libtinkerclv_a-colvarproxy_tinkerhp.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-exec install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


#
#depend.mk is ghenerated by a python script
depend.mk: 
	-$(PYTHON) ./Tinker_deps.py *.f > $@
#
# plumedlibs are generated, either by plumed.mk or noplumed.mk
plumed.mk:
	-echo "plumed:" > $@
	-echo "		-(cd ../plumed2 ; make -j 32 install VERBOSE=1)" >> $@
	-cp ../plumed2/MakeInstall.mk ../plumed2/install.mk
noplumed.mk:
	-echo "plumed:" > $@
	-echo "		-touch plumed" >> $@
	-echo "install:" > ../plumed2/install.mk
	-echo "		-touch noplumed" >> ../plumed2/install.mk
	-echo "all:" >> ../plumed2/install.mk
	-echo "		-touch noplumed" >> ../plumed2/install.mk
	-echo "clean:" >> ../plumed2/install.mk
	-echo "		-rm -f noplumed" >> ../plumed2/install.mk
#
# colvarslib is generated, either by colvars.mk or nocolvars.mk

colvars.mk:
	-echo "colvars:" > $@
	-echo "		-(cd ../colvars ; make -j 8 VERBOSE=1)" >> $@
nocolvars.mk:
	-echo "colvars:" > $@
	-echo "		-touch colvars" >> $@
# We remove the Makefile generated by configure
	-echo "		-/bin/rm -f ../colvars/Makefile" >> $@
# and generate a dumb Makefile, whitch does nothing, but answers the main requests (all, install, clean)
	-echo "		-echo \"all:\" > ../colvars/Makefile" >> $@
	-echo "		-echo \"	-touch colvars\" >> ../colvars/Makefile" >> $@
	-echo "		-echo \"install:\" >> ../colvars/Makefile" >> $@
	-echo "		-echo \"	-touch colvars\" >> ../colvars/Makefile" >> $@
	-echo "		-echo \"clean:\" >> ../colvars/Makefile" >> $@
	-echo "		-echo \"	-rm -f *.o libcolvars.a colvars\" >> ../colvars/Makefile" >> $@

#
# tcllib is generated, either by tcl.mk or notcl.mk

tcl.mk:
	-echo "tcl:" > $@
	-echo "		-(cd ../tcl8.6.13/unix ; make -j 8 VERBOSE=1)" >> $@
notcl.mk:
	-echo "tcl:" > $@
	-echo "		-touch tcl" >> $@
# We remove the Makefile generated by configure
	-echo "		-/bin/rm -f ../tcl8.6.13/unix/Makefile" >> $@
# and generate a dumb Makefile, whitch does nothing, but answers the main requests (all, install, clean)
	-echo "		-echo \"all:\" > ../tcl8.6.13/unix/Makefile" >> $@
	-echo "		-echo \"	-touch tcl\" >> ../tcl8.6.13/unix/Makefile" >> $@
	-echo "		-echo \"install:\" >> ../tcl8.6.13/unix/Makefile" >> $@
	-echo "		-echo \"	-touch tcl\" >> ../tcl8.6.13/unix/Makefile" >> $@
	-echo "		-echo \"clean:\" >> ../tcl8.6.13/unix/Makefile" >> $@
	-echo "		-echo \"	-rm -f *.o libtcl* tcl\" >> ../tcl8.6.13/unix/Makefile" >> $@

#
# local cleaning of *.mod files
#

clean-local :
	-rm -f *.mod depend.mk plumed.mk noplumed.mk plumed colvars.mk nocolvars.mk colvars tcl.mk notcl.mk tcl *_genmod.f90 *.debug

#
# include dependencies (Key substituted by configure)
# It should not be an explicit "include depend.mk"
# because depend.mk is created AFTER automake has done its job
#
@INCLUDE_DEPEND_MK@
#
# include plumed generation (Key substituted by configure)
# So, it's either plumed.mk or noplumed.mk
#
@INCLUDE_PLUMED_MK@
#
# include colvars generation (Key substituted by configure)
# So, it's either colvars.mk or nocolvars.mk
#
@INCLUDE_COLVARS_MK@
#
# include tcl generation (Key substituted by configure)
# So, it's either tcl.mk or notcl.mk
#
@INCLUDE_TCL_MK@
#
# End of Makefile.am
#

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
